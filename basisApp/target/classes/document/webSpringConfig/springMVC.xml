<?xml version="1.0" encoding="UTF-8"?>
<!-- springMVC配置 -->
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:beans="http://www.springframework.org/schema/beans" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	<!-- 对指定包中所有类进行扫描，完成bean的创建和自动依赖注入功能 -->
	<context:component-scan base-package="com.cpkf.notpad.controller" ></context:component-scan>
	
	<!-- 
		启动springMVC注解功能，完成请求和注解POJO的映射
		mvc:annotation-driven代替了AnnotationMethodHandlerAdapter、DefaultAnnotationHandlerMapping单独注册
		在WebApplicationContext中注册下面两个类
		org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping
		org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter
		支持数据绑定过程中的类型转换服务
		支持数字、日期、时间等数据的格式化
		支持使用JSR-303的数据验证功能
		支持XML和JSON的读写
	-->
	<mvc:annotation-driven />
	
	<!-- 对模型视图名称进行解析，在模型视图名称上添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
		p:prefix="/WEB-INF/webs/" p:suffix=".jsp"></bean>
	
	<!-- 重定义根请求，这个view一般是静态的 -->
	<mvc:view-controller path="/about" view-name="ablot"/>
	
	<!-- 访问静态资源文件(二选一)，使用默认的servlet来响应静态文件 -->
	<mvc:default-servlet-handler/>
	
	<!-- 访问静态资源文件(二选一)，匹配mapping，由spring读到内存，再响应http， -->
	<mvc:resources mapping="/media/" location="/media/**" cache-period="31556926"/>
	
	<!-- json支持,依赖jackson-core-lgpl.jar、jackson-mapper-asl.jar、jackson-mapper-lgpl.jar -->
	<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
	
	<!-- 注解验证，依赖validation-api.jar,hibernate-validator.jar -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"></bean>
	
	<!-- file上传，依赖commons-fileupload.jar, commons-io.jar -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1073741824" />
	</bean>
	
	<!-- exception处理 -->
	<beans:bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"
		p:defaultErrorView="common/error">
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="java.lang.RuntimeException">common/error</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
</beans>