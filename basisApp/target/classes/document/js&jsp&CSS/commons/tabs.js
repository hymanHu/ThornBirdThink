var StatsTabs = function(tabsId) {	this.tabsId = tabsId;	this.tabId = "tab_all_servers";	this.tabPanelId = "tabPanel_all_servers";	this.address;	this.tabsInstance = null;	this.tabTemplate = "<li><a href='#{href}'>#{label}</a><span class='ui-icon ui-icon-close'>Remove Tab</span></li>";	this.tab_counter = 2;//begin with 2,the first is 'all' tab	this.currentIndex = 0;//begin with 0		var self = this;	/*	 * init tabs	 */	this.init = function() {		tabsInstance = $("#" + self.tabsId).tabs({			tabTemplate: self.tabTemplate,			add : function(event, ui) {				// immediately select a just added tab				var selectPanelId = $("#" + self.tabsId).children().last()[0].id;				tabsInstance.tabs('select', '#' + selectPanelId);								//add id attribute for added tab				var selected = tabsInstance.tabs( "option", "selected" );				$("#graphTabs > li:eq(" + selected + ")").attr("id",self.tabId);				$("#graphTabs > li:eq(" + selected + ")").attr("address",self.address);			},			remove: function(event,ui) {				var tabPanels = $("#servers .ui-tabs-panel");				if(tabPanels[self.currentIndex - 1]){					var selectPanelId = tabPanels[self.currentIndex - 1].id;					tabsInstance.tabs('select', '#' + selectPanelId);					var currentTabId =  "tab_" + selectPanelId.substring(selectPanelId.indexOf("_") + 1,selectPanelId.length);					$("#" + currentTabId + " > a").click();				} else if(tabPanels[self.currentIndex]){					var selectPanelId = tabPanels[self.currentIndex].id;					tabsInstance.tabs('select', '#' + selectPanelId);					var currentTabId =  "tab_" + selectPanelId.substring(selectPanelId.indexOf("_") + 1,selectPanelId.length);					$("#" + currentTabId + " > a").click();				} else {					$('#openInNewWindow').html("");					$("#graphTabs").hide();				}			},			select: function(event,ui) {			}		});				// close icon: removing the tab on click		$("#" + self.tabsId + " span.ui-icon-close").live("click", function() {			//remove tab			var removeIndex = $("li", tabsInstance).index($(this).parent());			if($("li", tabsInstance).index($(".ui-tabs-paging-prev")) != -1) {				removeIndex = removeIndex - 1;			}			self.currentIndex = removeIndex;			tabsInstance.tabs("remove", removeIndex);		});	};		/*	 * tabs paging	 */	this.paging = function() {		$("#" + self.tabsId).tabs('paging', { 			cycle: true,			follow: true,			followOnSelect: true,			selectOnAdd: true,			nextButton: 'next &gt;',			prevButton: '&lt; prev'		} );	};		/*	 * add tab	 */	this.addTab = function(tabId,tabName,tabContent,address) {		self.address = address;		self.tabId = "tab_" + tabId;		self.tabPanelId = "tabPanel_" + tabId;		tabsInstance.append('<div id="' + self.tabPanelId + '" style="display:none;">' + tabContent + '</div>').			tabs('add','#' + self.tabPanelId, tabName, self.tab_counter);		self.tab_counter ++;	};};//新版var Tabs = function(tabsId) {	this.tabsId = tabsId;	this.tabTemplate  = "<li><a href='#{href}'>#{label}</a> <span class='ui-icon ui-icon-close' role='presentation'>Remove Tab</span></li>";	this.tabCounter = 1;	this.tabs;		var self = this;		this.init = function() {		tabs = $("#" + self.tabsId).tabs();				tabs.delegate( "span.ui-icon-close", "click", function() {			var panelId = $( this ).closest( "li" ).remove().attr( "aria-controls" );			$( "#" + panelId ).remove();			tabs.tabs( "refresh" );						var lis = $("#graphTabs > li");			if (lis.length == 0) {				$("#graphTabs").css("display", "none");			}		});			};		this.addTab = function(tabId, tabName, tabContent) {		$("#graphTabs").css("display", "block");				var label = tabName || "Tab_" + self.tabCounter,			href = "tabs_" + tabId,			li = $( self.tabTemplate.replace( /#\{href\}/g, "#" + href ).replace( /#\{label\}/g, label ) ),			tabContentHtml = tabContent;				tabs.find( ".ui-tabs-nav" ).append( li );		tabs.append( '<div id="' + href + '" style="display:none;"><p>' + tabContentHtml + '</p></div>' );		tabs.tabs( "refresh" );		self.tabCounter ++;	};};